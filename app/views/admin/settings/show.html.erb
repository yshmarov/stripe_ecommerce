<div class="container mx-auto p-6">
  <h2 class="text-3xl font-bold mb-8">Application Settings</h2>

  <%= form_with(model: Setting.new, url: admin_settings_path, class: "space-y-8") do |f| %>
    <% if @errors&.any? %>
      <div class="alert alert-error mb-6">
        <ul class="list-disc list-inside">
          <% @errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <% Setting.defined_fields.group_by { |f| f[:scope] }.each do |scope, fields| %>
      <details open class="collapse collapse-arrow bg-base-200 mb-4">
        <summary class="collapse-title text-xl font-medium">
          <%= t("activerecord.attributes.setting.scope.#{scope}", default: scope.to_s.titleize) %>
        </summary>
        <div class="collapse-content space-y-6">
          <% fields.each do |field| %>
            <div class="form-control">
              <% field_name = field[:key] %>
              <% field_type = field[:type] %>
              <% readonly = field[:readonly] %>

              <label class="label" for="setting_<%= field_name %>">
                <span class="label-text font-medium">
                  <%= t("activerecord.attributes.setting.#{field_name}", default: field_name.humanize) %>
                </span>
              </label>

              <% case field_type %>
              <% when :boolean %>
                <div class="flex items-center">
                  <%= f.check_box field_name, checked: Setting.send(field_name), disabled: readonly, class: "toggle toggle-primary" %>
                </div>
              <% when :array %>
                <%= f.text_area field_name, value: Setting.send(field_name)&.join("\n"), rows: 3, disabled: readonly, class: "textarea textarea-bordered w-full" %>
              <% when :hash %>
                <%= f.text_area field_name, value: YAML.dump(Setting.send(field_name).to_hash.transform_keys(&:to_s)), rows: 5, disabled: readonly, class: "textarea textarea-bordered w-full font-mono" %>
                <small class="text-base-content/70">Use YAML format</small>
              <% when :text %>
                <%= f.text_area field_name, value: Setting.send(field_name), rows: 5, disabled: readonly, class: "textarea textarea-bordered w-full" %>
              <% else %>
                <% if field[:options]&.dig(:option_values).present? %>
                  <%= f.select field_name, options_for_select(field[:options][:option_values], Setting.send(field_name)), {}, disabled: readonly, class: "select select-bordered w-full" %>
                <% else %>
                  <%= f.text_field field_name, value: Setting.send(field_name), disabled: readonly, class: "input input-bordered w-full", placeholder: field[:options]&.dig(:placeholder) %>
                <% end %>
              <% end %>

              <% if field[:options]&.dig(:help_text).present? %>
                <small class="text-base-content/70 mt-1">
                  <%= field[:options][:help_text] %>
                </small>
              <% end %>

              <% if readonly %>
                <small class="text-base-content/70 mt-1">
                  <em>This setting is readonly</em>
                </small>
              <% end %>
            </div>
          <% end %>
        </div>
      </details>
    <% end %>

    <div class="flex justify-end">
      <%= f.submit "Save Settings", class: "btn btn-primary" %>
    </div>
  <% end %>
</div>
